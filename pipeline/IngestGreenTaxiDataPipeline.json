{
	"name": "IngestGreenTaxiDataPipeline",
	"properties": {
		"activities": [
			{
				"name": "Copy_GreenTaxiData",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "/trip-data/green_tripdata_2024-01.parquet"
					},
					{
						"name": "Destination",
						"value": "green/2024-01/green_tripdata_2024-01.parquet"
					}
				],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_GreenTaxiSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_GreenTaxiSink",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Lookup_IngestionMetadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "SELECT BatchID FROM IngestionMetadata \nWHERE BatchID = '@{pipeline().parameters.batch}' \n  AND FileType = 'green'\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Metadata",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If_NotAlreadyLoaded",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Lookup_IngestionMetadata').output.firstRow, null)\n",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"batch": {
				"type": "string",
				"defaultValue": "\"2024-01\""
			},
			"filePath": {
				"type": "string",
				"defaultValue": "\"/trip-data/green_tripdata_2024-01.parquet\""
			},
			"folderPath": {
				"type": "string",
				"defaultValue": "\"green/2024-01/\""
			},
			"fileName": {
				"type": "string",
				"defaultValue": "\"green_tripdata_2024-01.parquet\""
			}
		},
		"annotations": []
	}
}